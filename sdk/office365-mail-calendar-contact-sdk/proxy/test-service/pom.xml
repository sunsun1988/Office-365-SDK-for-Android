<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright Â© Microsoft Open Technologies, Inc.

    All Rights Reserved

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS
    OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION
    ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A
    PARTICULAR PURPOSE, MERCHANTABILITY OR NON-INFRINGEMENT.

    See the Apache License, Version 2.0 for the specific language
    governing permissions and limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.microsoft.office</groupId>
		<artifactId>mail-calendar-contact-aggregator</artifactId>
		<version>1.1</version>
		<relativePath>../../parent/pom.xml</relativePath>
	</parent>

	<groupId>com.microsoft.office</groupId>
	<artifactId>mail-calendar-contact-proxy-test-service</artifactId>
	<packaging>war</packaging>

	<name>Microsoft Office 365 Mail-Calendar-Contact SDK for Java: Test Service</name>
	<description>Service to be used for integration tests.</description>

	<properties>
		<main.basedir>${project.parent.basedir}</main.basedir>

		<log.directory>${project.build.directory}/log</log.directory>

		<tomcat.version>7.0.50</tomcat.version>
		<cxf.version>2.7.8</cxf.version>
		<spring.version>3.2.7.RELEASE</spring.version>

		<cargo.servlet.port>9080</cargo.servlet.port>
		<cargo.tomcat.ajp.port>9889</cargo.tomcat.ajp.port>
		<cargo.rmi.port>9805</cargo.rmi.port>
		<cargo.log>${log.directory}/cargo.log</cargo.log>
		<cargo.output>${log.directory}/cargo-output.log</cargo.output>
	</properties>

	<dependencies>
		<!-- REST services CXF -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- /REST services CXF -->

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.esigate</groupId>
			<artifactId>esigate-core</artifactId>
			<version>4.3</version>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<defaultGoal>clean package cargo:run</defaultGoal>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<webResources>
						<!-- HACK: Include legal files explicity, otherwise they will end up
							in the wrong path or in another jar file in the war. -->
						<resource>
							<directory>${project.build.outputDirectory}</directory>
							<includes>
								<include>META-INF/DEPENDENCIES*</include>
							</includes>
						</resource>
						<resource>
							<directory>${basedir}/../</directory>
							<targetPath>META-INF</targetPath>
							<includes>
								<include>LICENSE</include>
							</includes>
						</resource>
					</webResources>
					<packagingExcludes>WEB-INF/classes/esigate.properties,WEB-INF/classes/META-INF/LICENSE*,WEB-INF/classes/META-INF/DEPENDENCIES*</packagingExcludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.4.6</version>
				<configuration>
					<container>
						<containerId>tomcat7x</containerId>
						<zipUrlInstaller>
							<url>http://archive.apache.org/dist/tomcat/tomcat-7/v${tomcat.version}/bin/apache-tomcat-${tomcat.version}.zip</url>
							<downloadDir>${settings.localRepository}/org/codehaus/cargo/cargo-container-archives</downloadDir>
							<extractDir>${project.build.directory}/cargo/extract</extractDir>
						</zipUrlInstaller>
						<log>${cargo.log}</log>
						<output>${cargo.output}</output>
					</container>
					<configuration>
						<type>standalone</type>
						<properties>
							<cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>
							<cargo.tomcat.ajp.port>${cargo.tomcat.ajp.port}</cargo.tomcat.ajp.port>
							<cargo.rmi.port>${cargo.rmi.port}</cargo.rmi.port>

							<!--<cargo.jvmargs>-Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n</cargo.jvmargs> -->
							<cargo.jvmargs>-noverify -XX:+CMSClassUnloadingEnabled
								-XX:+UseConcMarkSweepGC -XX:MaxPermSize=256m</cargo.jvmargs>
						</properties>
						<files>
							<file>
								<file>${project.build.directory}/classes/esigate.properties</file>
								<todir>lib</todir>
							</file>
						</files>
						<configfiles>
							<configfile>
								<file>${project.build.directory}/classes/context.xml</file>
								<todir>conf/</todir>
								<tofile>context.xml</tofile>
							</configfile>
							<configfile>
								<file>${project.build.directory}/classes/tomcat-users.xml</file>
								<todir>conf/</todir>
								<tofile>tomcat-users.xml</tofile>
							</configfile>
						</configfiles>
					</configuration>
					<deployables>
						<deployable>
							<properties>
								<context>/</context>
							</properties>
						</deployable>
					</deployables>
				</configuration>
			</plugin>
		</plugins>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>..</directory>
				<targetPath>META-INF</targetPath>
				<includes>
					<include>LICENSE</include>
				</includes>
			</resource>
		</resources>
	</build>

</project>
